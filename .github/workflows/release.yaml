on:
  release:
    types: [created]

  push:
    branches:
      - master
      - main

    tags:
      - 'v*'
      - 'rc-*'
      - 'dev-*'
      - 'test-*'

name: Release line-fact-check with Nix
jobs:
  generate:
    name: Build line-fact-check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout for build
        uses: actions/checkout@master

      - name: Install Nix
        uses: cachix/install-nix-action@v30
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build foo from flake
        run: |
          nix build .#foo

      - name: Zip foo binaries
        run: |
          zip -r line-fact-check-x86_64_linux.zip result/bin

      - name: Build bar from flake
        run: |
          nix build .#bar

      - name: Zip bar binaries
        run: |
          zip -r line-fact-check-x86_64_linux.zip result/bin

      - name: Upload artifact
        uses: actions/upload-artifact@master
        with:
          name: line-fact-check-zip
          path: ./line-fact-check-x86_64_linux.zip

  release-tag:
    if: ${{ github.ref_type  == 'tag' }}
    name: Release from tag
    runs-on: ubuntu-latest
    needs: generate
    steps:
      - name: Checkout for release
        uses: actions/checkout@master

      - name: Download pre-built zip artifact
        uses: actions/download-artifact@v4
        with:
          name: line-fact-check-zip
          path: ./
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./line-fact-check-x86_64_linux.zip
          asset_name: line-fact-check-x86_64_linux.zip
          asset_content_type: application/zip

  release-branch:
    if: ${{ github.ref_type  == 'branch' }}
    name: Release from branch
    needs: generate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout for release
        uses: actions/checkout@master

      - name: Download pre-built zip artifact
        uses: actions/download-artifact@v4
        with:
          name: line-fact-check-zip
          path: ./
      
      - name: Get today's date
        run: |
          # Store 2025-01-01 in env $RELEASE_DATE
          echo "RELEASE_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Create Release for branch ${{ github.ref_name }}
        id: create_release
        uses: actions/create-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}-${{ env.RELEASE_DATE }}-${{ github.sha }}
          release_name: Release ${{ github.ref_name }} ${{ env.RELEASE_DATE }} ${{ github.sha }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./line-fact-check-x86_64_linux.zip
          asset_name: line-fact-check-x86_64_linux.zip
          asset_content_type: application/zip

