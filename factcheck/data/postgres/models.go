// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package postgres

import (
	"github.com/jackc/pgx/v5/pgtype"
)

type Answer struct {
	ID        pgtype.UUID        `json:"id"`
	TopicID   pgtype.UUID        `json:"topic_id"`
	Text      string             `json:"text"`
	CreatedAt pgtype.Timestamptz `json:"created_at"`
	UpdatedAt pgtype.Timestamptz `json:"updated_at"`
}

type Message struct {
	ID            pgtype.UUID        `json:"id"`
	UserMessageID pgtype.UUID        `json:"user_message_id"`
	Type          string             `json:"type"`
	Status        string             `json:"status"`
	TopicID       pgtype.UUID        `json:"topic_id"`
	Text          string             `json:"text"`
	Language      pgtype.Text        `json:"language"`
	CreatedAt     pgtype.Timestamptz `json:"created_at"`
	UpdatedAt     pgtype.Timestamptz `json:"updated_at"`
}

type MessageGroup struct {
	ID        pgtype.UUID        `json:"id"`
	TopicID   pgtype.UUID        `json:"topic_id"`
	Name      string             `json:"name"`
	Text      string             `json:"text"`
	TextSha1  string             `json:"text_sha1"`
	Language  pgtype.Text        `json:"language"`
	CreatedAt pgtype.Timestamptz `json:"created_at"`
	UpdatedAt pgtype.Timestamptz `json:"updated_at"`
}

type MessagesV2 struct {
	ID        pgtype.UUID        `json:"id"`
	UserID    string             `json:"user_id"`
	TopicID   pgtype.UUID        `json:"topic_id"`
	GroupID   pgtype.UUID        `json:"group_id"`
	TypeUser  string             `json:"type_user"`
	Type      string             `json:"type"`
	Text      string             `json:"text"`
	Language  pgtype.Text        `json:"language"`
	Metadata  []byte             `json:"metadata"`
	CreatedAt pgtype.Timestamptz `json:"created_at"`
	UpdatedAt pgtype.Timestamptz `json:"updated_at"`
}

type Topic struct {
	ID           pgtype.UUID        `json:"id"`
	Name         string             `json:"name"`
	Description  string             `json:"description"`
	Status       string             `json:"status"`
	Result       pgtype.Text        `json:"result"`
	ResultStatus pgtype.Text        `json:"result_status"`
	CreatedAt    pgtype.Timestamptz `json:"created_at"`
	UpdatedAt    pgtype.Timestamptz `json:"updated_at"`
}

type UserMessage struct {
	ID        pgtype.UUID        `json:"id"`
	Type      string             `json:"type"`
	RepliedAt pgtype.Timestamptz `json:"replied_at"`
	Metadata  []byte             `json:"metadata"`
	CreatedAt pgtype.Timestamptz `json:"created_at"`
	UpdatedAt pgtype.Timestamptz `json:"updated_at"`
}
