// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package postgres

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

type Querier interface {
	CountTopicsByStatus(ctx context.Context, status string) (int64, error)
	CountTopicsGroupedByStatus(ctx context.Context) ([]CountTopicsGroupedByStatusRow, error)
	CreateMessage(ctx context.Context, arg CreateMessageParams) (Message, error)
	CreateTopic(ctx context.Context, arg CreateTopicParams) (Topic, error)
	CreateUserMessage(ctx context.Context, arg CreateUserMessageParams) (UserMessage, error)
	DeleteMessage(ctx context.Context, id pgtype.UUID) error
	DeleteTopic(ctx context.Context, id pgtype.UUID) error
	DeleteUserMessage(ctx context.Context, id pgtype.UUID) error
	GetMessage(ctx context.Context, id pgtype.UUID) (Message, error)
	GetTopic(ctx context.Context, id pgtype.UUID) (Topic, error)
	GetUserMessage(ctx context.Context, id pgtype.UUID) (UserMessage, error)
	ListMessagesByTopic(ctx context.Context, topicID pgtype.UUID) ([]Message, error)
	ListTopics(ctx context.Context) ([]Topic, error)
	ListTopicsByMessageText(ctx context.Context, text string) ([]Topic, error)
	ListTopicsByStatus(ctx context.Context, status string) ([]Topic, error)
	ListTopicsInIDs(ctx context.Context, dollar_1 []pgtype.UUID) ([]Topic, error)
	ListTopicsInIDsAndMessageText(ctx context.Context, arg ListTopicsInIDsAndMessageTextParams) ([]Topic, error)
	ListUserMessagesByMessage(ctx context.Context, messageID pgtype.UUID) ([]UserMessage, error)
	UpdateMessage(ctx context.Context, arg UpdateMessageParams) (Message, error)
	UpdateTopicDescription(ctx context.Context, arg UpdateTopicDescriptionParams) (Topic, error)
	UpdateTopicName(ctx context.Context, arg UpdateTopicNameParams) (Topic, error)
	UpdateTopicStatus(ctx context.Context, arg UpdateTopicStatusParams) (Topic, error)
	UpdateUserMessage(ctx context.Context, arg UpdateUserMessageParams) (UserMessage, error)
}

var _ Querier = (*Queries)(nil)
